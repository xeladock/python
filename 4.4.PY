# Суть задачи та же, что и Caesar cipher, с одним отличием: кодируются символы из интервала 1F600—1F64F таблицы символов Юникода. Используется кодировка UTF-8.
#
# Для всех символов сдвиг один и тот же. Сдвиг циклический, т.е. если к последнему символу алфавита применить единичный сдвиг, то он заменится на первый символ, и наоборот.
#
# Напишите программу, которая шифрует текст шифром Цезаря.
#
# Формат ввода:
# На первой строке указывается используемый сдвиг шифрования: целое число. Положительное число соответствует сдвигу вправо. На второй строке указывается непустая фраза для шифрования.
#
# Не обращайте внимания, если у вас отображаются прямоугольники вместо некоторых символов. Это значит, что ваш шрифт не содержит этих символов. Для решения задачи это не имеет никакого значения.
#
# Формат вывода:
# Единственная строка, в которой записана фраза: Result: "..." , где вместо многоточия внутри кавычек записана зашифрованная последовательность.
#
# Sample Input 1:
#
# 1
# 😀🙏😇
# Sample Output 1:
#
# Result: "😁😀😈"
# Sample Input 2:
#
# 1
# 😀😁😂😃😄😅😆😇😈😉😊😋😌😍😎😏😐😑😒😓😔😕😖😗😘😙😚😛😜😝😞😟😠😡😢😣😤😥😦😧😨😩😪😫😬😭😮😯😰😱😲😳😴😵😶😷😸😹😺😻😼😽😾😿🙀🙁🙂🙃🙄🙅🙆🙇🙈🙉🙊🙋🙌🙍🙎🙏
# Sample Output 2:
#
# Result: "😁😂😃😄😅😆😇😈😉😊😋😌😍😎😏😐😑😒😓😔😕😖😗😘😙😚😛😜😝😞😟😠😡😢😣😤😥😦😧😨😩😪😫😬😭😮😯😰😱😲😳😴😵😶😷😸😹😺😻😼😽😾😿🙀🙁🙂🙃🙄🙅🙆🙇🙈🙉🙊🙋🙌🙍🙎🙏😀"
import demoji
# m=range('([\U0001F600-\U0001F64F])')
# print(m)
# print(m>>1)
# print("\U0001f600">1)
# b='😀'
# print (demoji.findall(b))
# s=range('\U0001F600','\U0001F64F')
# for ss in s:
#     print(ss)
# import re
# s=re.compile(r'[\U0001F600-\U0001F64F]', re.DEBUG)
# for s in range('([\U0001F600-\U0001F64F])'):
#     print(s)
# import emoji
# import emoji
a=[chr(i) for i in range(int(0x1f600), int(0x1f650))]
# a = range(int(0x1f600), int(0x1f650))
# a= ''.join([chr(i) for i in range(int(0x1f600), int(0x1f64f) + 1)])
# list     = [c for c in a if c in emoji.UNICODE_EMOJI]
c=int(input())
b = str(input().strip())
# print(b)
# n=0
res=''
# while n!=len(b):
for text in b:
        res=res+a[(a.index(text)+c)%len(a)]
        # n+=1
        # if n==len(b):
print('Result: "{}"'.format(res))
# c=int(input())
# b = str(input().strip())
# print(b)
# n=0
# res=''
# # while n!=len(b):
# for text in b:
#         res=res+a[(a.index(text)+c)%27]
#         # n+=1
#         # if n==len(b):
# print('Result: {}'.format(res))
